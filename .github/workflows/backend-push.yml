name: Push CI/CD

on:
  push:
    paths:
      - 'backend/**'
    branches:
      - main

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest
#     environment: Emtiaz_backend
#     env:
#       FIREBASE_ACCOUNT_TYPE: ${{ secrets.FIREBASE_ACCOUNT_TYPE }}
#       FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
#       FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
#       FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
#       FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
#       FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
#       FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
#       FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
#       FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
#       FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
#       FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}
#       DB_NAME: ${{ secrets.DB_NAME }}
#       USER_NAME: ${{ secrets.USER_NAME }}
#       PASSWORD: ${{ secrets.PASSWORD }}
#       DB_SERVER_NAME: ${{ secrets.DB_SERVER_NAME }}
#       DEBUG: ${{ secrets.DEBUG }}
#       SECRET_KEY: ${{ secrets.SECRET_KEY }}
#       ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
#       AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
#       AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
#       AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
#       DISK_URI: ${{ secrets.DISK_URI }}
#       DOCKER_IMAGE_PATH: ${{ secrets.DOCKER_IMAGE_PATH }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

#     - name: Install Dependencies
#       run: |
#         pip install -r backend/requirements.txt

#     - name: Run Tests
#       run: |
#         python backend/manage.py test
#       env:
#         FIREBASE_ACCOUNT_TYPE: ${{ secrets.FIREBASE_ACCOUNT_TYPE }}
#         FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
#         FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
#         FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
#         FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
#         FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
#         FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
#         FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
#         FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
#         FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
#         FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}
#         DB_NAME: ${{ secrets.DB_NAME }}
#         USER_NAME: ${{ secrets.USER_NAME }}
#         PASSWORD: ${{ secrets.PASSWORD }}
#         DB_SERVER_NAME: ${{ secrets.DB_SERVER_NAME }}
#         DEBUG: ${{ secrets.DEBUG }}
#         SECRET_KEY: ${{ secrets.SECRET_KEY }}
#         ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
#         AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
#         AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
#         AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
#         DISK_URI: ${{ secrets.DISK_URI }}
#         DOCKER_IMAGE_PATH: ${{ secrets.DOCKER_IMAGE_PATH }}

    # - name: Azure ACR Login
    #   uses: azure/docker-login@v1
    #   with:
    #     login-server: ${{ secrets.ACR_USERNAME }}.azurecr.io
    #     username: ${{ secrets.ACR_USERNAME }} 
    #     password: ${{ secrets.ACR_PASSWORD }}

    # - name: Build and push Docker image
    #   working-directory: backend
    #   run: |
    #     docker build -t ${{ secrets.ACR_USERNAME }}.azurecr.io/tensorits-backend-image:${{ github.sha }} .
    #     docker push ${{ secrets.ACR_USERNAME }}.azurecr.io/tensorits-backend-image:${{ github.sha }}

    # - name: Azure login
    #   uses: azure/login@v1.4.3
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - uses: azure/aks-set-context@v3
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
    #     cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
    #     resource-group: ${{ secrets.RESOURCE_GROUP }}
    # - name: Deploy to AKS
    #   uses: Azure/k8s-deploy@v4
    #   with:
    #     manifests: |
    #       backend/kubernetes/deployment.yaml
    #     images: titsacr.azurecr.io/tensorits-backend-image:${{ github.sha }}
    #     pull-images: false


